# Name of the application.
applicationName: "app"

namespaceOverride: "app"

#Deployment
deployment:
  reloadOnChange: false
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  # replicas: 1
  envFrom:
    app-configmap:
      type: configmap
      name: app-configmap
    app-secret:
      type: secret
      name: app-secret
  volumes:
    shared-storage:
      persistentVolumeClaim:
        claimName: shared-pvc
  volumeMounts:
      shared-storage:
         mountPath: /var/www/html
  image:
    repository: 034362049682.dkr.ecr.ap-southeast-1.amazonaws.com/chatapp
    tag: "08b7b096"
    pullPolicy: IfNotPresent
  resources:
    limits:
      memory: 256Mi
      cpu: 0.5
    requests:
      memory: 256Mi
      cpu: 0.5
  containerSecurityContext:
    readOnlyRootFilesystem: false
    runAsNonRoot: false
  securityContext:
    fsGroup: 2000
  command: []
  args: []
  ports:
  - containerPort: 9000
    name: php-fpm
    protocol: TCP
  terminationGracePeriodSeconds: 120
  lifecycle:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "cp -r /app/. /var/www/html"]
  additionalContainers:
  - name: webserver
    image: public.ecr.aws/g7j1x0t3/nginx:latest
    imagePullPolicy: Always
    volumeMounts:
    - name: shared-storage
      mountPath: /var/www/html
    ports:
      - containerPort: 80
        name: http
        protocol: TCP
    lifecycle:
      postStart:
        exec:
          command: ["/bin/sh", "-c", "chmod -R guo+w /var/www/html/storage"]
    securityContext:
      fsGroup: 2000

# PVC && PVC
persistence:
  enabled: true
  mountPVC: false
  mountPath: "/"
  name: "shared-pvc"
  accessMode: ReadWriteOnce
  storageClass: "gp2"
  storageSize: 5Gi

# Service
service:
  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: 80
  type: ClusterIP

# ConfigMaps
configMap:
  enabled: true
  files:
    configmap:
      APP_NAME: Laravel
      APP_ENV: local
      APP_DEBUG: "true"
      APP_TIMEZONE: UTC
      APP_URL: https://tanphanhue.shop
      APP_LOCALE: en
      APP_FALLBACK_LOCALE: en
      APP_FAKER_LOCALE: en_US
      APP_MAINTENANCE_DRIVER: file
      PHP_CLI_SERVER_WORKERS: "4"
      BCRYPT_ROUNDS: "12"
      LOG_CHANNEL: stack
      LOG_STACK: single
      LOG_DEPRECATIONS_CHANNEL: null
      LOG_LEVEL: debug
      SESSION_DRIVER: database
      SESSION_LIFETIME: "120"
      SESSION_ENCRYPT: "false"
      SESSION_PATH: /
      SESSION_DOMAIN: null
      BROADCAST_CONNECTION: reverb
      FILESYSTEM_DISK: local
      QUEUE_CONNECTION: database
      CACHE_STORE: database
      CACHE_PREFIX: ""
      MEMCACHED_HOST: 127.0.0.1
      REDIS_CLIENT: phpredis
      REDIS_HOST: 127.0.0.1
      REDIS_PASSWORD: null
      REDIS_PORT: "6379"
      MAIL_MAILER: log
      MAIL_HOST: 127.0.0.1
      MAIL_PORT: "2525"
      MAIL_USERNAME: null
      MAIL_PASSWORD: null
      MAIL_ENCRYPTION: null
      MAIL_FROM_ADDRESS: hello@example.com
      MAIL_FROM_NAME: Laravel
      AWS_DEFAULT_REGION: ap-southeast-1
      AWS_BUCKET: ""
      AWS_USE_PATH_STYLE_ENDPOINT: "false"
      VITE_APP_NAME: Laravel
      REVERB_APP_ID: "1410"
      REVERB_HOST: reverb
      REVERB_PORT: "8080"
      REVERB_SCHEME: http
      VITE_REVERB_HOST: https://tanphanhue.shop
      VITE_REVERB_PORT: "80"
      VITE_REVERB_SCHEME: http
      VITE_REVERB_PATH: /reverb
      APP_CONFETTI_WORDS: "chuc mung|congratulations|congrats|happy new year"

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
         type: Utilization
         averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
         type: Utilization
         averageUtilization: 60

# Ingress
ingress:
  enabled: true
  ingressClassName: alb
  hosts:
    - host: tanphanhue.shop
      paths:
      - path: /
        pathType: Prefix
        serviceName: app
        servicePort: http
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: pet-dev-alb-chatapp
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:034362049682:certificate/660d4feb-1023-4418-884a-2abbcb9e613b
    alb.ingress.kubernetes.io/group.name: app
    alb.ingress.kubernetes.io/group.order: '10'
    alb.ingress.kubernetes.io/healthcheck-path: /login