# Name of the application.
applicationName: "webserver"

namespaceOverride: "app"

deployment:
  reloadOnChange: false
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  replicas: 1
  volumes:
    shared-storage:
      persistentVolumeClaim:
        claimName: shared-pvc
  volumeMounts:
      shared-storage:
         mountPath: /var/www/html
  image:
    repository: public.ecr.aws/g7j1x0t3/nginx
    tag: latest
    pullPolicy: Always
  # livenessProbe:
  #   enabled: true
  #   failureThreshold: 3
  #   periodSeconds: 10
  #   successThreshold: 1
  #   timeoutSeconds: 1
  #   initialDelaySeconds: 10
  #   httpGet:
  #     path: /
  #     port: 80
  lifecycle:
    postStart:
      exec:
        command: ["/bin/sh", "-c", "chmod -R guo+w /var/www/html/storage"]
  # Resources to be defined for pod
  resources:
    limits:
      memory: 256Mi
      cpu: 0.5
    requests:
      memory: 128Mi
      cpu: 0.1
  # Security Context at Container Level
  containerSecurityContext:
    readOnlyRootFilesystem: false
    runAsNonRoot: false
  # Security Context for the pod
  securityContext:
    fsGroup: 2000
  # Command for primary container
  command: []
  # Args for primary contaner
  args: []
  # List of ports for the primary container
  ports:
  - containerPort: 80
    name: http
    protocol: TCP
  # Graceful termination timeout
  terminationGracePeriodSeconds: 120
# Service object for servicing pods
service:
  enabled: true
  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: 80
  type: ClusterIP

# Ingress object for exposing services
ingress:
  enabled: true

  # Name of the ingress class
  ingressClassName: alb

  # List of host addresses to be exposed by this Ingress

  hosts:
    - host: tanphanhue.shop
      paths:
      - path: /
        pathType: Prefix
        serviceName: webserver
        servicePort: http
  # Add annotations to this Ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: app
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-1:034362049682:certificate/660d4feb-1023-4418-884a-2abbcb9e613b
    alb.ingress.kubernetes.io/group.name: app
    alb.ingress.kubernetes.io/group.order: '10'
    alb.ingress.kubernetes.io/healthcheck-path: /login

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
         type: Utilization
         averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
         type: Utilization
         averageUtilization: 60

